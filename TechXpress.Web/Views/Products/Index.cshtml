@model IEnumerable<TechXpress.Data.Entities.Product>
@{
    ViewData["Title"] = "Products";
    var categories = ViewBag.Categories as IEnumerable<TechXpress.Data.Entities.Category>;
    int? selectedCategory = ViewBag.SelectedCategory as int?;
    decimal? minPrice = ViewBag.MinPrice as decimal?;
    decimal? maxPrice = ViewBag.MaxPrice as decimal?;
    string sortBy = ViewBag.SortBy as string ?? "relevance";
}

<div class="row">
    <!-- Page Header -->
    <div class="col-12 mb-4">
        <div class="page-header">
            <h1 class="section-title mb-0">Explore Our Tech Universe</h1>
            <div class="product-count">
                <span class="badge bg-primary">@Model.Count() products found</span>
            </div>
        </div>
    </div>

    <!-- Filters Sidebar -->
    <div class="col-md-3 mb-4">
        <div class="card filter-card mb-4">
            <div class="card-body">
                <div class="filter-header mb-3">
                    <h5 class="mb-0"><i class="fas fa-sliders-h me-2"></i>Filters</h5>
                </div>
                <form method="get" action="/Products" id="filterForm">
                    <!-- Category Filter -->
                    <div class="filter-group mb-4">
                        <label class="filter-label">Category</label>
                        <select name="categoryId" class="form-select custom-select" onchange="this.form.submit()">
                            <option value="">All Categories</option>
                            @foreach (var category in categories)
                            {
                                if (selectedCategory == category.Id)
                                {
                                    <option value="@category.Id" selected>@category.Name</option>
                                }
                                else
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            }
                        </select>
                    </div>

                    <!-- Price Range Filter -->
                    <div class="filter-group mb-4">
                        <label class="filter-label">Price Range</label>
                        <div class="price-slider mb-3">
                            <div id="priceRange"></div>
                        </div>
                        <div class="row g-2">
                            <div class="col">
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="minPriceInput" name="minPrice" placeholder="Min" value="@minPrice" min="0">
                                </div>
                            </div>
                            <div class="col">
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="maxPriceInput" name="maxPrice" placeholder="Max" value="@maxPrice" min="0">
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Sort Filter -->
                    <div class="filter-group mb-4">
                        <label class="filter-label">Sort By</label>
                        <select name="sortBy" class="form-select custom-select">
                            @if (sortBy == "relevance")
                            {
                                <option value="relevance" selected>Relevance</option>
                            }
                            else
                            {
                                <option value="relevance">Relevance</option>
                            }
                            
                            @if (sortBy == "priceAsc")
                            {
                                <option value="priceAsc" selected>Price: Low to High</option>
                            }
                            else
                            {
                                <option value="priceAsc">Price: Low to High</option>
                            }
                            
                            @if (sortBy == "priceDesc")
                            {
                                <option value="priceDesc" selected>Price: High to Low</option>
                            }
                            else
                            {
                                <option value="priceDesc">Price: High to Low</option>
                            }
                            
                            @if (sortBy == "newest")
                            {
                                <option value="newest" selected>Newest First</option>
                            }
                            else
                            {
                                <option value="newest">Newest First</option>
                            }
                        </select>
                    </div>

                    <!-- Apply Filters Button -->
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-2"></i>Apply Filters
                        </button>
                        <a href="/Products" class="btn btn-outline-light">
                            <i class="fas fa-redo me-2"></i>Reset Filters
                        </a>
                    </div>
                </form>
            </div>
        </div>

        <!-- Quick Category Links -->
        <div class="card category-links-card">
            <div class="card-body">
                <div class="filter-header mb-3">
                    <h5 class="mb-0"><i class="fas fa-th-large me-2"></i>Categories</h5>
                </div>
                <div class="category-links">
                    <a href="/Products" class="category-link @(selectedCategory == null ? "active" : "")">
                        <i class="fas fa-globe me-2"></i>All Products
                        <span class="category-count">@Model.Count()</span>
                    </a>
                    @foreach (var category in categories)
                    {
                        var categoryIcon = "fa-microchip";
                        if (category.Name.ToLower().Contains("laptop")) { categoryIcon = "fa-laptop"; }
                        else if (category.Name.ToLower().Contains("mobile") || category.Name.ToLower().Contains("phone")) { categoryIcon = "fa-mobile-alt"; }
                        else if (category.Name.ToLower().Contains("camera")) { categoryIcon = "fa-camera"; }
                        else if (category.Name.ToLower().Contains("audio")) { categoryIcon = "fa-headphones"; }
                        else if (category.Name.ToLower().Contains("gaming")) { categoryIcon = "fa-gamepad"; }
                        
                        <a href="/Products?categoryId=@category.Id" 
                           class="category-link @(selectedCategory == category.Id ? "active" : "")">
                            <i class="fas @categoryIcon me-2"></i>@category.Name
                            <span class="category-count">@Model.Count(p => p.CategoryId == category.Id)</span>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="col-md-9">
        @if (!Model.Any())
        {
            <div class="alert alert-info text-center">
                <i class="fas fa-info-circle me-2"></i>No products found matching your criteria.
                <a href="/Products" class="alert-link">Clear all filters</a>
            </div>
        }
        else
        {
            <div class="products-header mb-3">
                <div class="view-options">
                    <button class="btn btn-sm btn-outline-primary active" data-view="grid">
                        <i class="fas fa-th-large"></i>
                    </button>
                    <button class="btn btn-sm btn-outline-primary" data-view="list">
                        <i class="fas fa-list"></i>
                    </button>
                </div>
            </div>
            
            <div class="row row-cols-1 row-cols-md-3 g-4" id="products-grid">
                @foreach (var product in Model)
                {
                    <div class="col">
                        <div class="card product-card h-100">
                            <!-- Product Image - Clickable -->
                            <a href="/Products/Details/@product.Id" class="card-img-top d-flex align-items-center justify-content-center position-relative" style="height: 220px; text-decoration: none;">
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid" style="max-height: 100%; max-width: 100%; object-fit: contain;">
                                }
                                else
                                {
                                    <i class="fa-solid fa-box-open fa-3x text-secondary"></i>
                                }
                                
                                <div class="image-overlay">
                                    <div class="overlay-buttons">
                                        <a href="/Products/Details/@product.Id" class="btn btn-sm btn-primary rounded-circle">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        @if (product.Stock > 0)
                                        {
                                            <form method="post" action="/Cart/Add" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="productId" value="@product.Id" />
                                                <input type="hidden" name="quantity" value="1" />
                                                <button type="submit" class="btn btn-sm btn-accent rounded-circle">
                                                    <i class="fas fa-cart-plus"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </div>
                                
                                @if (product.Stock < 5 && product.Stock > 0)
                                {
                                    <div class="product-badge badge-warning">
                                        Low Stock
                                    </div>
                                }
                                @if (product.Stock == 0)
                                {
                                    <div class="product-badge badge-danger">
                                        Out of Stock
                                    </div>
                                }
                            </a>

                            <!-- Product Content -->
                            <div class="card-body d-flex flex-column">
                                <span class="product-category mb-2">@product.Category?.Name</span>
                                <h5 class="card-title mb-2">
                                    <a href="/Products/Details/@product.Id" class="text-decoration-none">@product.Name</a>
                                </h5>
                                <p class="card-text text-secondary flex-grow-1 small">
                                    @(product.Description.Length > 80 ? product.Description.Substring(0, 80) + "..." : product.Description)
                                </p>
                                
                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <span class="product-price">$@product.Price.ToString("0.00")</span>
                                    
                                    <div class="product-actions">
                                        <a href="/Products/Details/@product.Id" class="btn btn-sm btn-outline-primary">
                                            Details
                                        </a>
                                        @if (product.Stock > 0)
                                        {
                                            <form method="post" action="/Cart/Add" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="productId" value="@product.Id" />
                                                <input type="hidden" name="quantity" value="1" />
                                                <button type="submit" class="btn btn-sm btn-success ms-1">
                                                    <i class="fas fa-cart-plus"></i>
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-sm btn-secondary ms-1" disabled>
                                                <i class="fas fa-cart-plus"></i>
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            
            <div id="products-list" class="d-none">
                @foreach (var product in Model)
                {
                    <div class="card product-card-list mb-3">
                        <div class="row g-0">
                            <div class="col-md-3">
                                <a href="/Products/Details/@product.Id" class="product-img-container d-flex align-items-center justify-content-center" style="text-decoration: none;">
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid" style="max-height: 150px; max-width: 100%; object-fit: contain;">
                                    }
                                    else
                                    {
                                        <i class="fa-solid fa-box-open fa-3x text-secondary"></i>
                                    }
                                    
                                    @if (product.Stock < 5 && product.Stock > 0)
                                    {
                                        <div class="product-badge badge-warning">
                                            Low Stock
                                        </div>
                                    }
                                    @if (product.Stock == 0)
                                    {
                                        <div class="product-badge badge-danger">
                                            Out of Stock
                                        </div>
                                    }
                                </a>
                            </div>
                            <div class="col-md-9">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <span class="product-category d-block mb-1">@product.Category?.Name</span>
                                            <h5 class="card-title">
                                                <a href="/Products/Details/@product.Id" class="text-decoration-none">@product.Name</a>
                                            </h5>
                                        </div>
                                        <span class="product-price">$@product.Price.ToString("0.00")</span>
                                    </div>
                                    <p class="card-text mt-2">
                                        @(product.Description.Length > 150 ? product.Description.Substring(0, 150) + "..." : product.Description)
                                    </p>
                                    <div class="d-flex mt-3">
                                        <a href="/Products/Details/@product.Id" class="btn btn-outline-primary me-2">
                                            <i class="fas fa-eye me-1"></i> View Details
                                        </a>
                                        @if (product.Stock > 0)
                                        {
                                            <form method="post" action="/Cart/Add">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="productId" value="@product.Id" />
                                                <input type="hidden" name="quantity" value="1" />
                                                <button type="submit" class="btn btn-success">
                                                    <i class="fas fa-cart-plus me-1"></i> Add to Cart
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-secondary" disabled>
                                                <i class="fas fa-cart-plus me-1"></i> Out of Stock
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<style>
    /* Page Header */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        position: relative;
    }
    
    .product-count .badge {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 30px;
        font-weight: 500;
    }
    
    /* Category links */
    .category-links-card {
        border-radius: 1rem;
        overflow: hidden;
        background: var(--glass-bg);
        border: 1px solid var(--glass-border);
    }
    
    .category-links {
        display: flex;
        flex-direction: column;
    }
    
    .category-link {
        color: var(--text-secondary);
        text-decoration: none;
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        margin-bottom: 0.25rem;
        transition: all var(--transition-normal);
        display: flex;
        align-items: center;
        position: relative;
    }
    
    .category-link:hover {
        color: var(--primary-color);
        background: rgba(99, 102, 241, 0.1);
    }
    
    .category-link.active {
        color: var(--primary-color);
        background: rgba(99, 102, 241, 0.15);
        font-weight: 500;
    }
    
    .category-count {
        margin-left: auto;
        background: rgba(0, 0, 0, 0.2);
        border-radius: 30px;
        font-size: 0.75rem;
        padding: 0.2rem 0.5rem;
    }
    
    .category-link.active .category-count {
        background: var(--primary-color);
        color: white;
    }
    
    /* Products header */
    .products-header {
        display: flex;
        justify-content: flex-end;
        align-items: center;
    }
    
    .view-options {
        display: flex;
        gap: 0.5rem;
    }
    
    .view-options .btn {
        padding: 0.3rem 0.6rem;
    }
    
    /* Product card styling */
    .product-card {
        transition: all var(--transition-normal);
        border: 1px solid var(--glass-border);
        overflow: hidden;
    }
    
    .product-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        border-color: var(--primary-color);
    }
    
    .product-card .card-img-top {
        background: rgba(15, 23, 42, 0.4);
        padding: 1rem;
    }
    
    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(15, 23, 42, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity var(--transition-normal);
    }
    
    .overlay-buttons {
        display: flex;
        gap: 1rem;
        transform: translateY(20px);
        transition: transform var(--transition-normal);
    }
    
    .overlay-buttons .btn {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }
    
    .product-card:hover .image-overlay {
        opacity: 1;
    }
    
    .product-card:hover .overlay-buttons {
        transform: translateY(0);
    }
    
    /* Product badge */
    .product-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        padding: 0.35rem 0.75rem;
        border-radius: 30px;
        font-size: 0.8rem;
        font-weight: 500;
        z-index: 10;
    }
    
    .badge-warning {
        background: linear-gradient(135deg, var(--warning-color), #d97706);
        color: #000;
    }
    
    .badge-danger {
        background: linear-gradient(135deg, var(--danger-color), #dc2626);
        color: #fff;
    }
    
    /* List view styling */
    .product-card-list {
        border: 1px solid var(--glass-border);
        border-radius: 1rem;
        overflow: hidden;
        transition: all var(--transition-normal);
    }
    
    .product-card-list:hover {
        transform: translateX(5px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        border-color: var(--primary-color);
    }
    
    .product-img-container {
        height: 100%;
        padding: 1rem;
        background: rgba(15, 23, 42, 0.4);
        position: relative;
        min-height: 200px;
    }
    
    /* Price range slider */
    .price-slider {
        padding: 0.5rem 0.25rem;
        margin-bottom: 1.5rem;
    }
    
    .noUi-connect {
        background: linear-gradient(to right, var(--primary-color), var(--accent-color));
    }
    
    .noUi-horizontal {
        height: 8px;
    }
    
    .noUi-handle {
        width: 18px !important;
        height: 18px !important;
        border-radius: 50%;
        background: var(--glass-bg);
        border: 2px solid var(--primary-color);
        box-shadow: 0 0 10px var(--glow-color);
        right: -9px !important;
    }
    
    .noUi-handle:after, 
    .noUi-handle:before {
        display: none;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/nouislider@14.6.3/distribute/nouislider.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nouislider@14.6.3/distribute/nouislider.min.css">

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle grid/list view
        const gridViewBtn = document.querySelector('[data-view="grid"]');
        const listViewBtn = document.querySelector('[data-view="list"]');
        const productsGrid = document.getElementById('products-grid');
        const productsList = document.getElementById('products-list');
        
        if (gridViewBtn && listViewBtn) {
            gridViewBtn.addEventListener('click', function() {
                gridViewBtn.classList.add('active');
                listViewBtn.classList.remove('active');
                productsGrid.classList.remove('d-none');
                productsList.classList.add('d-none');
            });
            
            listViewBtn.addEventListener('click', function() {
                listViewBtn.classList.add('active');
                gridViewBtn.classList.remove('active');
                productsList.classList.remove('d-none');
                productsGrid.classList.add('d-none');
            });
        }
        
        // Initialize price range slider if element exists
        const priceSlider = document.getElementById('priceRange');
        if (priceSlider) {
            const minPrice = @(minPrice.HasValue ? minPrice.Value.ToString() : "0");
            const maxPrice = @(maxPrice.HasValue ? maxPrice.Value.ToString() : "1000");
            
            noUiSlider.create(priceSlider, {
                start: [minPrice, maxPrice],
                connect: true,
                step: 10,
                range: {
                    'min': 0,
                    'max': 2000
                }
            });
            
            const minPriceInput = document.getElementById('minPriceInput');
            const maxPriceInput = document.getElementById('maxPriceInput');
            
            priceSlider.noUiSlider.on('update', function(values, handle) {
                const value = Math.round(values[handle]);
                
                if (handle === 0) {
                    minPriceInput.value = value;
                } else {
                    maxPriceInput.value = value;
                }
            });
            
            minPriceInput.addEventListener('change', function() {
                priceSlider.noUiSlider.set([this.value, null]);
            });
            
            maxPriceInput.addEventListener('change', function() {
                priceSlider.noUiSlider.set([null, this.value]);
            });
        }
    });
</script>